package de.uol.swp.client.lobby.Presenter;

import com.google.common.eventbus.EventBus;
import com.google.inject.Inject;
import de.uol.swp.client.AbstractPresenter;
import de.uol.swp.client.lobby.LobbyService;
import de.uol.swp.client.lobby.event.ShowCreateLobbyViewEvent;
import de.uol.swp.client.lobby.event.MultiplayerCanceledEvent;
import de.uol.swp.client.main.MainMenuPresenter;
import de.uol.swp.client.user.ClientUserService;
import de.uol.swp.common.user.User;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.ListView;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 * Manages the registration window
 *
 * @author Marco Grawunder
 * @see de.uol.swp.client.AbstractPresenter
 * @since 2019-08-29
 *
 */
public class FindCreatePresenter extends AbstractPresenter {


    public static final String FXML = "/fxml/FindCreateView.fxml";

    private static final Logger LOG = LogManager.getLogger(MainMenuPresenter.class);

    private ObservableList<String> users;

    private User loggedInUser;

    @Inject
    private LobbyService lobbyService;

    @FXML
    private ListView<String> usersView;





    //private static final RegistrationCanceledEvent registrationCanceledEvent = new RegistrationCanceledEvent();

    private static final MultiplayerCanceledEvent multiplayerCanceledEvent = new MultiplayerCanceledEvent();


    public FindCreatePresenter() {
    }

    /**
     * Constructor
     *
     * @param eventBus The EventBus set in ClientModule
     * @param userService The injected ClientUserService
     * @see de.uol.swp.client.di.ClientModule
     * @since 2019-09-18
     */
    @Inject
    public FindCreatePresenter(EventBus eventBus, ClientUserService userService) {
        setEventBus(eventBus);
    }

    /**
     * Method called when the cancel button is pressed
     *
     * This Method is called when the cancel button is pressed. It posts an instance
     * of the RegistrationCanceledEvent to the EventBus the SceneManager is subscribed
     * to.
     *
     * @param event The ActionEvent generated by pressing the register button
     * @see de.uol.swp.client.register.event.RegistrationCanceledEvent
     * @see de.uol.swp.client.SceneManager
     * @since 2019-09-02
     */
    @FXML
    void onCancelButtonPressed(ActionEvent event) {
        eventBus.post(multiplayerCanceledEvent);
    }

    @FXML
    void onCreateLobbyButtonPressed(ActionEvent actionEvent) {
        eventBus.post(new ShowCreateLobbyViewEvent());
    }

    /**
     * Method called when the register button is pressed
     *
     * This Method is called when the register button is pressed. It posts an instance
     * of the RegistrationErrorEvent to the EventBus the SceneManager is subscribed
     * to, if one of the fields is empty or the password fields are not equal.
     * If everything is filled in correctly the user service is requested to create
     * a new user.
     *
     * @param event The ActionEvent generated by pressing the register button
     * @see de.uol.swp.client.register.event.RegistrationErrorEvent
     * @see de.uol.swp.client.SceneManager
     * @see de.uol.swp.client.user.UserService
     * @since 2019-09-02
     *
     */




}