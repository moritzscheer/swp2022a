package de.uol.swp.client.lobby.presenter;

import com.google.common.eventbus.EventBus;
import com.google.common.eventbus.Subscribe;
import com.google.inject.Inject;
import de.uol.swp.client.AbstractPresenter;
import de.uol.swp.client.lobby.LobbyService;
import de.uol.swp.client.lobby.event.ShowCreateLobbyViewEvent;
import de.uol.swp.client.lobby.event.JoinOrCreateCanceledEvent;
import de.uol.swp.client.user.ClientUserService;
import de.uol.swp.common.lobby.message.LobbyCreatedMessage;
import de.uol.swp.common.user.User;
import de.uol.swp.common.user.UserDTO;
import de.uol.swp.common.user.response.LoginSuccessfulResponse;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.ListView;
import javafx.scene.control.TextField;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 * Manages the registration window
 *
 * @author Marco Grawunder
 * @see de.uol.swp.client.AbstractPresenter
 * @since 2019-08-29
 *
 */
public class JoinOrCreatePresenter extends AbstractPresenter {

    public static final String FXML = "/fxml/JoinOrCreateView.fxml";
    private static final Logger LOG = LogManager.getLogger(JoinOrCreatePresenter.class);

    private User loggedInUser;

    @Inject
    private LobbyService lobbyService;
    @FXML
    private ListView<String> usersView;
    @FXML
    private ListView<String> lobbyView;
    @FXML
    private TextField textFieldName;
    @FXML
    private TextField textFieldPassword;

    /**
     * Default Constructor
     * @since 2022-11-15
     */
    public JoinOrCreatePresenter() {
        // needed for javafx
    }

    /**
     * Constructor
     *
     * @param eventBus The EventBus set in ClientModule
     * @param userService The injected ClientUserService
     * @see de.uol.swp.client.di.ClientModule
     * @since 2019-09-18
     */
    @Inject
    public JoinOrCreatePresenter(EventBus eventBus, ClientUserService userService) {
        setEventBus(eventBus);
    }

    /**
     * Handles successful login
     *
     * If a LoginSuccessfulResponse is posted to the EventBus the loggedInUser
     * of this client is set to the one in the message received.
     *
     * @param message the LoginSuccessfulResponse object seen on the EventBus
     * @see de.uol.swp.common.user.response.LoginSuccessfulResponse
     * @since 2022-11-27
     */
    @Subscribe
    public void onLoginSuccessfulResponse(LoginSuccessfulResponse message) {
        this.loggedInUser = message.getUser();
    }

    /**
     * Handles created multiplayer lobbies
     *
     * If a LobbyCreatedMessage is posted to the EventBus this method is called.
     *
     * @param message the LobbyCreatedMessage object seen on the EventBus
     * @see de.uol.swp.common.lobby.message.LobbyCreatedMessage
     * @since 2022-11-30
     */
    @Subscribe
    public void onLobbyCreatedMessage(LobbyCreatedMessage message) {
        //implements to do
        //for lobby list
    }

    /**
     * Method called when the cancel button is pressed
     *
     * This Method is called when the cancel button is pressed. It posts an instance
     * of the JoinOrCreateCanceledEvent to the EventBus the SceneManager is subscribed
     * to.
     *
     * @param actionEvent The ActionEvent generated by pressing the cancel button
     * @see de.uol.swp.client.lobby.event.JoinOrCreateCanceledEvent
     * @see de.uol.swp.client.SceneManager
     * @since 2022-11-30
     */
    @FXML
    void onCancelButtonPressed(ActionEvent actionEvent) {
        eventBus.post(new JoinOrCreateCanceledEvent(loggedInUser));
    }

    /**
     * Method called when the create lobby button is pressed
     *
     * This Method is called when the create lobby button is pressed. It posts an instance
     * of the ShowCreateLobbyViewEvent to the EventBus the SceneManager is subscribed
     * to.
     *
     * @param actionEvent The ActionEvent generated by pressing the create lobby button
     * @see de.uol.swp.client.lobby.event.ShowCreateLobbyViewEvent
     * @see de.uol.swp.client.SceneManager
     * @since 2022-11-30
     */
    @FXML
    void onCreateLobbyButtonPressed(ActionEvent actionEvent) {
        eventBus.post(new ShowCreateLobbyViewEvent());
    }

    /**
     * Method to test the GUI
     *
     * @param actionEvent The ActionEvent generated by pressing the create lobby button
     * @since 2022-11-30
     */
    @FXML
    void onButtonSubmitPressed(ActionEvent actionEvent) {
        lobbyService.joinLobby(textFieldName.getText(), (UserDTO) loggedInUser, textFieldPassword.getText());
    }
}